name: Ray.jl - CI
on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags: ["*"]
    paths: ["Ray.jl/**", ".github/workflows/Ray_CI.yml"]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths: ["Ray.jl/**",".github/workflows/Ray_CI.yml"]
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    # Run on push's or non-draft PRs
    if: (github.event_name == 'push') || (github.event.pull_request.draft == false) || (github.event_name == 'workflow_dispatch')
    name: Julia ${{ matrix.version }} - ${{ matrix.runs-on }} - ${{ matrix.threads}} threads - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.runs-on }}
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.8'
          - '1'
        runs-on:
          - ubuntu-latest
        arch:
          - x64
        threads:
          - 1
    env:
      JULIA_NUM_THREADS: ${{ matrix.threads }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Clone Ray repository
        uses: actions/checkout@v3
        with:
          repository: beacon-biosignals/ray
          path: deps/ray
      - name: Determine Ray commit
        id: ray-commit
        run: |
           cd deps/ray
           head_sha="$(git rev-parse HEAD)"
           echo "head_sha=$head_sha" | tee -a "$GITHUB_OUTPUT"
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      # use build cache from jll CI
      # TODO: We shouldn't require separate caches per Julia version but allow cache restores to work
      # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#matching-a-cache-key
      - uses: actions/cache/restore@v3
        id: bazel-cache
        with:
          key: bazel-cache.${{ matrix.os }}.${{ matrix.arch }}.julia-${{ matrix.version }}.ray-${{ steps.ray-commit.outputs.head_sha }}.hash-${{ hashFiles('deps/WORKSPACE.bazel.tpl', 'deps/BUILD.bazel') }}
          path: ~/.cache/bazel
          restore-keys: |
            bazel-cache.${{ matrix.os }}.${{ matrix.arch }}.julia-${{ matrix.version }}.ray-${{ steps.ray-commit.outputs.head_sha }}.
            bazel-cache.${{ matrix.os }}.${{ matrix.arch }}.julia-${{ matrix.version }}.
            bazel-cache.${{ matrix.os }}.${{ matrix.arch }}.
      - name: "Monorepo setup"
        shell: julia --color=yes --project=Ray.jl {0}
        run: |
          using Pkg
          Pkg.develop(PackageSpec(; path="."))
      - name: Install Ray CLI
        run: pip install -U "ray[default]==2.5.1" "pydantic<2"
      - uses: julia-actions/julia-buildpkg@v1
        with:
          project: 'Ray.jl'
      - uses: julia-actions/julia-runtest@v1
        with:
          project: 'Ray.jl'
          annotate: true
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: 'Ray.jl/src/'
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: lcov.info
          flags: Ray.jl
